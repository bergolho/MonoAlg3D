# ====================================================================
# Authors: Lucas Berg and Elnaz Pouranbarani
# Description: This example demonstrates how to generate a sustained
# spiral wave using the TenTusscher model.
# ====================================================================
[main]
num_threads=6
dt_pde=0.02
simulation_time=2000.0
abort_on_no_activity=false
use_adaptivity=false

[save_result]
;/////mandatory/////////
print_rate=200
#output_dir=./outputs/elnaz_plain_mesh_tentusscher_spiral_sc0
#output_dir=./outputs/elnaz_plain_mesh_tentusscher_spiral_sc1_1
#output_dir=./outputs/elnaz_plain_mesh_tentusscher_spiral_sc1_2
#output_dir=./outputs/elnaz_plain_mesh_tentusscher_spiral_sc2_1
output_dir=./outputs/elnaz_plain_mesh_tentusscher_spiral_sc2_2
main_function=save_as_vtu
save_pvd=true
;//////////////////
file_prefix=V

[update_monodomain]
main_function=update_monodomain_default

[assembly_matrix]
init_function=set_initial_conditions_fvm
sigma_x=0.0000176 
sigma_y=0.0000134
sigma_z=0.0000176
sigma_factor=0.5
library_file=shared_libs/libdefault_matrix_assembly.so
main_function=homogeneous_sigma_with_a_factor_assembly_matrix

[linear_system_solver]
tolerance=1e-16
use_preconditioner=yes
max_iterations=200
library_file=shared_libs/libdefault_linear_system_solver.so
main_function=conjugate_gradient

[alg]
refinement_bound = 0.11
derefinement_bound = 0.10
refine_each = 1
derefine_each = 1

[domain]
name=Plain Mesh
num_layers=1
start_dx=200.0
start_dy=200.0
start_dz=200.0
side_length=20000
main_function=initialize_grid_with_square_mesh

[ode_solver]
dt_ode=0.02
use_gpu=no
gpu_id=0
#library_file = shared_libs/libmixed_tentusscher_myo_epi_2004_S0.so
#library_file = shared_libs/libmixed_tentusscher_myo_epi_2004_S1_1.so
#library_file = shared_libs/libmixed_tentusscher_myo_epi_2004_S1_2.so
#library_file = shared_libs/libmixed_tentusscher_myo_epi_2004_S2_1.so
library_file = shared_libs/libmixed_tentusscher_myo_epi_2004_S2_2.so

[stim_s1]
start = 0.0
duration = 2.0
current = -50.0f
x_limit = 400.0
main_function=stim_if_x_less_than

[stim_s2]
start = 450
duration = 2.0
current = -50.0f
min_x = 9000.0
max_x = 10000.0
min_y = 0.0
max_y = 15000.0
main_function=stim_x_y_limits

[extra_data]
library_file = shared_libs/libmixed_models_extra_data.so
main_function = set_mixed_model_if_x_less_than
x_limit = 10000
